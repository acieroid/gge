# vim: ft=python

env = Environment()

# Some definitions :
# inspired from http://www.scons.org/wiki/UsingPkgConfig
def CheckPKGConfig(context, version):
     context.Message( 'Checking for pkg-config... ' )
     ret = context.TryAction('pkg-config --atleast-pkgconfig-version=%s' % version)[0]
     context.Result( ret )
     return ret

def CheckPKG(context, name):
     context.Message( 'Checking for %s... ' % name )
     ret = context.TryAction('pkg-config --exists \'%s\'' % name)[0]
     context.Result( ret )
     return ret

# Check libs
libsUsed = ['guile-1.8', 'sdl']

conf = Configure(env, custom_tests = { 'CheckPKGConfig' : CheckPKGConfig,
                                       'CheckPKG' : CheckPKG })

if not conf.CheckPKGConfig('0.15.0'):
     print 'pkg-config >= 0.15.0 not found.'
     Exit(1)

for lib in libsUsed:
  if not conf.CheckPKG(lib):
       print lib, 'not found.'
       Exit(1)

env = conf.Finish()

# Config
libsStr = ''
for lib in libsUsed:
  libsStr += ' ' + lib
env.ParseConfig('pkg-config --cflags --libs' + libsStr)

# boost not in pkg-config
env.Append(LIBS=['boost_program_options', 'SDL_image'])

# Debug or not
env.Append(CCFLAGS = ['-O2'])
if int(ARGUMENTS.get('debug', 0)):
	env.Append(CCFLAGS = ['-g'])

# Cpp Defines (to include features or not)
# TODO: make easy the way to compile with SDL, ... 
# (access those variables through the command line
env.Append(CPPDEFINES=['WITH_GRAPHICS', 'WITH_SDL'])

env.Program(target='gge',
            source = ['main.cpp',
                      'ScriptManager.cpp',
                      'GGEElement.cpp',  
                      'System.cpp',
                      'LogManager.cpp',
                      'Display.cpp',
                      'MainLoop.cpp'
                     ])
